# -*- coding: utf-8 -*-
"""PI01_Recomendation_mode.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W3bwLicO0coiVA-BcekJ-DULfX9YAcWf
"""
import pandas as pd
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.pipeline import Pipeline

def process (movies_dataframe):
    print("Inicia construccion de modelo de recomendacion")
    keep_cols = ['genres_name', 'directors', 'popularity', 'revenue']
    movies_filtered = movies_dataframe.loc[:,keep_cols]


    # Creando canalizacion para variables numericas
    numeric_pipe = Pipeline([
        ('scaler', StandardScaler())
        ])

    # Creando canalizacion para variables categoricas
    categorical_pipe = Pipeline([
        ('encoder', OneHotEncoder(drop = 'first'))
        ])

    # Creando el transformador de columnas
    col_transf = ColumnTransformer([
        ('numeric', numeric_pipe, movies_filtered._get_numeric_data().columns.tolist()),
        ('categoric', categorical_pipe, movies_filtered.select_dtypes('object').columns.tolist())
        ])

    col_transf_fit = col_transf.fit(movies_filtered)
    movies_filtered_transf = col_transf_fit.transform(movies_filtered)
    movies_filtered_transf

    from sklearn.neighbors import NearestNeighbors

    n_neighbors=6
    #Entrenando el modelo de KNN para recomendacion
    nneighbors = NearestNeighbors(n_neighbors = n_neighbors, metric = 'cosine').fit(movies_filtered_transf)
    
    #Se retorna la matriz estandarizada y el modelo
    print("Finalza construccion de modelo de recomendacion")
    return movies_filtered_transf, nneighbors

